name: Publish Python package

on:
  release:
    types: [ published ]

env:
  PACKAGE_DIRECTORY: ./src/quart_assets/
  POETRY_VERSION: "2.1.3"
  POETRY_CORE_VERSION: "2.1.3"
  PYTHON_VERSION: "3.13"
  TAG_NAME: ${{ format('{0}', github.event.release.tag_name) }}

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      # IMPORTANT: this permission is mandatory for committing updated version
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: true

      - name: Set GitHub tag as package version
        run: |
          sed -i -r 's/__version__ *= *".*"/__version__ = "'${TAG_NAME}'"/g' ${{ env.PACKAGE_DIRECTORY }}__init__.py
          sed -i '0,/version =.*/s//version = "'"${TAG_NAME}"'"/' ./pyproject.toml
        shell: bash

      - name: Add and commit version
        run: |
          git add ${{ env.PACKAGE_DIRECTORY }}__init__.py ./pyproject.toml
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git commit -m "Change version to ${TAG_NAME}" --allow-empty
          git push origin HEAD:main
        shell: bash

  build-sdist:
    name: Build sdist

    needs: bump-version

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install poetry
        run: pip install poetry==${{ env.POETRY_VERSION }} poetry-core==${{ env.POETRY_CORE_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
          check-latest: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build PyPI package
        run: poetry build --format=sdist

      - name: Upload artefacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artefacts-sdist
          path: ./dist/quart_assets-*.tar.gz

  build-wheels:
    name: Build wheels on ${{ matrix.os }}

    needs: bump-version

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, windows-2025, windows-11-arm, macos-15]

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install poetry
        run: pip install poetry==${{ env.POETRY_VERSION }} poetry-core==${{ env.POETRY_CORE_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
          check-latest: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build PyPI package
        run: poetry build --format=wheel

      - name: Upload artefacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artefacts-wheel-${{ matrix.os }}
          path: ./dist/quart_assets-*.whl

  publish-test-pypi:
    name: Publish package to TestPyPI

    needs:
      - build-sdist
      - build-wheels

    runs-on: ubuntu-latest

    env:
      PUBLISH_REGISTRY: https://test.pypi.org/legacy/

    environment:
      name: testpypi
      url: https://test.pypi.org/p/quart-assets

    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: artefacts-*
          path: dist
          merge-multiple: true

      - name: Publish PyPI package
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          repository-url: ${{ env.PUBLISH_REGISTRY }}

  publish-pypi:
    name: Publish PyPI package

    needs:
      - publish-test-pypi

    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/quart-assets

    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: artefacts-*
          path: dist
          merge-multiple: true

      - name: Publish PyPI package
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
