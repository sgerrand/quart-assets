name: Publish Python package

on:
  release:
    types: [ published ]

env:
  PACKAGE_DIRECTORY: ./src/quart_assets/
  POETRY_VERSION: "2.1.3"
  POETRY_CORE_VERSION: "2.1.3"
  PYTHON_VERSION: "3.13"

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      # IMPORTANT: this permission is mandatory for committing updated version
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set GitHub tag as package version
        run: |
          sed -i -r 's/__version__ *= *".*"/__version__ = "${{ github.event.release.tag_name }}"/g' ${{ env.PACKAGE_DIRECTORY }}__init__.py
          sed -i '0,/version =.*/s//version = "'"${{ github.event.release.tag_name }}"'"/' ./pyproject.toml

      - name: Add and commit version
        run: |
          git add ${{ env.package_directory }}__init__.py ./pyproject.toml
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git commit -m "Change version to ${{ github.event.release.tag_name }}" --allow-empty
          git push origin HEAD:main

  build-sdist:
    name: Build sdist

    needs: bump-version

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pip install poetry==${{ env.POETRY_VERSION }} poetry-core==${{ env.POETRY_CORE_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
          check-latest: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build PyPI package
        run: poetry build --format=sdist

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: artefacts-sdist
          path: ./dist/quart_assets-*.tar.gz

  build-wheels:
    name: Build wheels on ${{ matrix.os }}

    needs: bump-version

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, windows-2025, windows-11-arm, macos-15]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pip install poetry==${{ env.POETRY_VERSION }} poetry-core==${{ env.POETRY_CORE_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: poetry
          check-latest: true

      - name: Install dependencies
        run: poetry install --no-root

      - name: Build PyPI package
        run: poetry build --format=wheel

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: artefacts-wheel-${{ matrix.os }}
          path: ./dist/quart_assets-*.whl

  publish:
    name: Publish PyPI package

    needs:
      - build-sdist
      - build-wheels

    runs-on: ubuntu-latest

    env:
      PUBLISH_REGISTRY: https://test.pypi.org/legacy/

    environment:
      name: testpypi
      url: https://test.pypi.org/p/quart-assets

    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v4
        with:
          pattern: artefacts-*
          path: dist
          merge-multiple: true

      - name: Publish PyPI package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ env.PUBLISH_REGISTRY }}
